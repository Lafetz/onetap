services:
  http:
    build:
      context: ./http
      dockerfile: ./Dockerfile
    ports:
      - 8080:8080
    depends_on:
      - postgres
    environment:
      - DB_URL=postgres://user:password@postgres/loyality?sslmode=disable
      - ENV=dev
      - PORT=8080
      - LOG_LEVEL=debug
      - REDIS_URL=cache:6379
      - REDIS_PASS=eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    networks:
      - app
  mock_order:
    build:
      context: ./mock_order
      dockerfile: ./Dockerfile
    ports:
      - 3000:3000
    networks:
      - app
  notifi:
    build:
      context: ./notifi
      dockerfile: ./Dockerfile
    ports:
      - 4000:4000
    environment:
      - REDIS_URL=cache:6379
    networks:
      - app
  migrate:
    image: migrate/migrate
    volumes:
      - ./http/db/migrations:/migrations
    command:
      [
        "-path",
        "/migrations",
        "-database",
        "postgres://user:password@postgres/loyality?sslmode=disable",
        "up",
      ]
    networks:
      - app
    links:
      - postgres
  postgres:
    image: postgres:14-alpine
    ports:
      - 5432:5432

    environment:
      - POSTGRES_PASSWORD=password
      - POSTGRES_USER=user
      - POSTGRES_DB=loyality
    networks:
      - app
  cache:
    image: redis:6.2-alpine
    restart: always
    ports:
      - "6379:6379"
    command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    networks:
      - app
networks:
  app:
    driver: bridge
